Caracteristicas principales del E-commerce
- Los banners ("slider principal", "#imperdibles"), cards ("porque elegirnos", "sucursales"), testimonios ("nuestros clientes opinan"), cupones de descuento, costo envio se cargan desde archivos .json local con fetch 
- Los productos se cargan remotamente desde https://json.ar (una idea que surgio durante el curso para hacer "pseudos apis"!, le voy a dar continuidad con NodeJS a la idea.)
- Secciones predefinidas para mostrar producto (#lacoste y #vestidos)
- Los productos mostrados en la seccion "nuestros productos" pueden ser filtrados, ordenados y paginados
- Permite agregar/quitar a favoritos desde la misma card de producto
- Permite agregar productos al carrito controlando el stock segun el talle
- Los productos son mostrado en Pesos y Bitcoin (actualizable desde api cryptoya.com cada 5 minutos)
- Buscador "livesearch" sobre el top de productos
- Notificaciones en diversas acciones con colores segun el evento
- Carrito de compra discriminado por poducto y talle del mismo.
- Permite agregar/quitar un cupon de descuento detectando si es por % o por importe fijo 
- Permite calcular el costo de envio ingresando el Codigo Postal.
- Hace envio gratis para compras mayores a $16.000
- Se guarda en locastorage (carrito, favoritos, cupon, envio) y sessionStorage (filtros y orden)

CUPONES DISPONIBLES: house10, house15, house30, house500, house800
CP DISPONIBLES: x5000, y6000, z7000, a1000, b2000
ENVIO GRATIS para mayor a 16000
PAGiNADOR cada 3 productos

ESTRUCTURA DE ARCHIVOS
js/script.js  = hilo principal del ecommerce
js/funciones.js = funciones comunes
js/Clases/ = Clases de entidades usadas
js/Clases/componentes/ = componenente de renderizados de las clases
json/ = archivos .json




/***** Version 1.5 *****/
Funcionalidades ENTREGA FINAL
-Actualizacion del selector de talle si se quita del carrito y esta la card del producto visible
-Actualizacion del boton favorita si se quita del modal favorito y esta la card del producto visible
-Se incluye paginador de los resultados de productos
-Formulario de finalizacion para ingreso de datos de la compra


/***** Version 1.4 *****/
Consideraciones en la entrega AGREGANDO FETCH:
-Se hizo fetch para cargar los productos desde un archivo json
-Se hizo fetch para cargar api de criptoya.com para mostrar precios en Bitcoin
-Se uso then, promesas, etc.


/***** Version 1.3 *****/
Consideraciones en la entrega OPTIMIZANDO PROYECTO:
-Se hace uso del oeprador Nullish y OR en las carga de los storage favoritos (cargarFavoritoStorage) y storage carrito (cargarCarritoStorage)
    Archivos: /js/Clases/Favoritos.js y /js/Clases/Carrito.js
-Se hace uso de operadores ternarios para cambiar los botones al agregar favoritos (renderizaBotonFavorito) y selector de talles (renderizaSelectTalle)
    Archivos: /js/Clases/componentes/productos.js
-Se hace uso del Spread para copias en los filtros de productos (filtrarPor, generarProductosCarrito) 
    Archivos: /js/Clases/Producto.js
-Se hace uso de desustructuracion para obtener/verificar stock del producto (verificaStock)
    Archivos: /js/Clases/Producto.js
-Se agrego y programo eventos y notificaciones a traves con libreria Tostify
-Se agregaron nuevos controles y estilos en botones de favoritos de cada cards de producto.
-Se hace calculo de total en el carrito y se plasma para aplicar cupone descuento y costo de envio

/***** Version 1.2 *******/ 
Consideraciones en la SEGUNDA entrega:
a) Se agrego y programo funcionlidad a los botones
b) Se agrego y programo  filtros y orden a los productos
c) Se agrego y programo  botones y funcionalidad de comprar y agregar a favoritos por cada producto
d) Se agrego  y programo seleccionables dinamicos de Talle, segun la existencia de stock  
e) Se agrego  y programo  popup en  favoritos y el carrito de comprar
f) Se agrego  y programo  eliminar favoritos y del carrito de compras productos
g) Se programo controles varios de productos x stock
h) se guarda en localstorage el carrito y favoritos
i) se guarda en sessionStorage los filtros y orden seleccionado.
j) Se agrego y programo el buscador en el top


/***** Version 1.1 *******/ 
Consideraciones en la PRIMERA entrega:
a) Basado en una plantilla boostrap
b) Se agrego y programo el directorio /js/Clases/* y /js/Clases/componentes/*
c) Se agrego y programo el archivo /js/script.js 
d) Funcionalidades de 1ra pre-entrega: Carga banners dinamicos en distitnas posiciones, carga cards informativas, carga testimonios, simula agregar y quitar favoritos, simula agregar al carrito
e) Ejecutar index.html para cargar la homepage dinamica 









